server:
  port: 8080 # 사용 포트
  servlet:
    context-path: /
    encoding:
      charset: UTF-8
      enabled: true
      force: true

spring:
  datasource:
    url: jdbc:mysql://{EL_DB_URI}/education_lab?autoReconnect=true&serverTimezone=Asia/Seoul
    username: {EL_DB_USERNAME}
    password: {EL_DB_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    show-sql: true
    hibernate:
      ddl-auto: update #create update none
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
  security:
    oauth2:
      client:
        registration:
          naver:
            client-id: {EL_NAVER_CLIENT_ID}
            client-secret: {EL_NAVER_CLIENT_SECRET}
            scope:
              - name
              - email
            client-name: Naver # 클라이언트 네임은 구글 페이스북도 대문자로 시작하더라.
            authorization-grant-type: authorization_code  # 코드를 부여받는 방식
            redirect-uri: http://localhost:8080/login/oauth2/code/naver

        # 네이버는 OAuth2.0 공식 지원대상이 아니라서 별도로 "naver"라는 provider를 등록해줘야함
        # provider 등록을 안하면 "clientRegistrationRepository"에 "naver"라는 id로 등록된 provider가 없다고 에러남
        # 요청주소도 다르고, 응답 데이터도 다르기 때문이다.
        provider:
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response # 회원정보를 json의 response 키값으로 리턴해줌.

jwt:
  access-token-key: {EL_JWT_ACCESS_TOKEN_KEY}
  refresh-token-key: {EL_JWT_REFRESH_TOKEN_KEY}

app:
  oauth2:
    authorized-redirect-uri: {EL_AUTHORIZED_REDIRECT_URI}  # 인증후 리다이렉트 주소